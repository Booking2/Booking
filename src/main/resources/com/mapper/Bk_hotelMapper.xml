<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.Bk_hotelMapper">
  <resultMap id="BaseResultMap" type="com.entity.Bk_hotel">
    <id column="Hoid" jdbcType="INTEGER" property="hoid" />
    <result column="Hid" jdbcType="INTEGER" property="hid" />
    <result column="Honame" jdbcType="VARCHAR" property="honame" />
    <result column="Hodescribe" jdbcType="VARCHAR" property="hodescribe" />
    <result column="Hosentiment" jdbcType="INTEGER" property="hosentiment" />
    <result column="Hoaddress" jdbcType="VARCHAR" property="hoaddress" />
    <result column="Hostate" jdbcType="CHAR" property="hostate" />
    <result column="Hostaydate" jdbcType="TIMESTAMP" property="hostaydate" />
    <result column="Hocheckdate" jdbcType="TIMESTAMP" property="hocheckdate" />
    <result column="Reid" jdbcType="INTEGER" property="reid" />
    <result column="Arid" jdbcType="INTEGER" property="arid" />
    <result column="Rtid" jdbcType="INTEGER" property="rtid" />
    <result column="Pipicture" jdbcType="VARCHAR" property="pipicture" />
    <result column="Hoids" jdbcType="INTEGER" property="hoids" />
    <result column="Sscore" jdbcType="FLOAT" property="sscore" />
    <result column="Cname" jdbcType="VARCHAR" property="cname" />
    <result column="Ciid" jdbcType="INTEGER" property="ciid" />
    <result column="Aname" jdbcType="VARCHAR" property="aname" /> 
  </resultMap>
  <sql id="Base_Column_List">
    Hoid, Hid, Honame, Hodescribe, Hosentiment, Hoaddress, Hostate, Hostaydate, Hocheckdate, 
    Reid, Arid
  </sql>
  <!-- 分页总数  -->
  <select id="counthotleid" parameterType="java.lang.Integer" resultType="int">
      SELECT   COUNT(ho.Hoid)
	  FROM bk_hotel AS ho INNER JOIN bk_area AS a ON ho.Arid = a.Arid  
	  INNER JOIN bk_city AS c
	  ON c.Ciid = a.Ciid
	  WHERE c.Ciid = #{ciid} AND ho.Hostate = 1;
  </select>
  
  <!-- 分页查询酒店信息  -->
  <select id="gethotelByArid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
     <!-- SELECT COUNT(DISTINCT p.Hoid),p.Pipicture AS Pipicture,  ho.*
	  FROM bk_hotel AS ho INNER JOIN bk_area AS a ON ho.Arid = a.Arid 
	  LEFT JOIN bk_pictures AS p
	  ON p.Hoid =ho.Hoid 
	  WHERE a.Arid =#{arid} GROUP BY  ho.Hoid LIMIT #{stratIndex},#{pageSize}; -->
	  
	    SELECT  ho.* FROM bk_hotel AS ho 
		LEFT JOIN bk_area AS a 
		ON ho.Arid = a.Arid 
		LEFT JOIN bk_city AS c           <!-- arid = ciid -->
		ON a.Ciid = c.Ciid WHERE c.Ciid = #{arid} AND ho.Hostate = 1  LIMIT #{stratIndex},#{pageSize};
  </select>
  
   <!--  查询酒店图片及评分  -->
  <select id="getpipictureAndsscoreById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      SELECT COUNT(DISTINCT p.Hoid),p.Pipicture AS Pipicture ,AVG(s.Sscore) AS Sscore
      FROM bk_hotel AS ho LEFT JOIN bk_pictures AS p
      ON p.Hoid =ho.Hoid  
      LEFT JOIN bk_score AS s
      ON s.Hoid = ho.Hoid
      WHERE ho.Hoid  = #{hoid};
  </select>
  
   <!-- 模糊查询酒店  -->
   <select id="gethonameByhoname"  parameterType="java.lang.String"  resultMap="BaseResultMap">
      SELECT Honame,Hoid  FROM bk_hotel WHERE Honame LIKE concat("%",#{honame},"%");
   </select>
   
   <select id="gethotelAllByhoid" parameterType="java.lang.Integer"  resultMap="BaseResultMap">
       SELECT ho.*,a.Arname as Aname,c.Ciid as Ciid,c.Ciname as Cname  FROM 
		  bk_hotel AS ho INNER JOIN bk_area AS a 
		  ON ho.Arid = a.Arid
		  INNER JOIN bk_city AS c
		  ON a.Ciid = c.Ciid
		  WHERE ho.Hoid = #{hoid};
   </select>
   
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bk_hotel
    where Hoid = #{hoid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bk_hotel
    where Hoid = #{hoid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.entity.Bk_hotel">
    insert into bk_hotel (Hoid, Hid, Honame, 
      Hodescribe, Hosentiment, Hoaddress, 
      Hostate, Hostaydate, Hocheckdate, 
      Reid, Arid)
    values (#{hoid,jdbcType=INTEGER}, #{hid,jdbcType=INTEGER}, #{honame,jdbcType=VARCHAR}, 
      #{hodescribe,jdbcType=VARCHAR}, #{hosentiment,jdbcType=INTEGER}, #{hoaddress,jdbcType=VARCHAR}, 
      #{hostate,jdbcType=CHAR}, #{hostaydate,jdbcType=TIMESTAMP}, #{hocheckdate,jdbcType=TIMESTAMP}, 
      #{reid,jdbcType=INTEGER}, #{arid,jdbcType=INTEGER})
  </insert>
   <!-- 插入酒店返回酒店主键 -->
  <insert id="insertSelective" parameterType="com.entity.Bk_hotel" useGeneratedKeys="true"  keyProperty="hoid" >
    insert into bk_hotel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hoid != null">
        Hoid,
      </if>
      <if test="hid != null">
        Hid,
      </if>
      <if test="honame != null">
        Honame,
      </if>
      <if test="hodescribe != null">
        Hodescribe,
      </if>
      <if test="hosentiment != null">
        Hosentiment,
      </if>
      <if test="hoaddress != null">
        Hoaddress,
      </if>
      <if test="hostate != null">
        Hostate,
      </if>
      <if test="hostaydate != null">
        Hostaydate,
      </if>
      <if test="hocheckdate != null">
        Hocheckdate,
      </if>
      <if test="reid != null">
        Reid,
      </if>
      <if test="arid != null">
        Arid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hoid != null">
        #{hoid,jdbcType=INTEGER},
      </if>
      <if test="hid != null">
        #{hid,jdbcType=INTEGER},
      </if>
      <if test="honame != null">
        #{honame,jdbcType=VARCHAR},
      </if>
      <if test="hodescribe != null">
        #{hodescribe,jdbcType=VARCHAR},
      </if>
      <if test="hosentiment != null">
        #{hosentiment,jdbcType=INTEGER},
      </if>
      <if test="hoaddress != null">
        #{hoaddress,jdbcType=VARCHAR},
      </if>
      <if test="hostate != null">
        #{hostate,jdbcType=CHAR},
      </if>
      <if test="hostaydate != null">
        #{hostaydate,jdbcType=TIMESTAMP},
      </if>
      <if test="hocheckdate != null">
        #{hocheckdate,jdbcType=TIMESTAMP},
      </if>
      <if test="reid != null">
        #{reid,jdbcType=INTEGER},
      </if>
      <if test="arid != null">
        #{arid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Bk_hotel">
    update bk_hotel
    <set>
      <if test="hid != null">
        Hid = #{hid,jdbcType=INTEGER},
      </if>
      <if test="honame != null">
        Honame = #{honame,jdbcType=VARCHAR},
      </if>
      <if test="hodescribe != null">
        Hodescribe = #{hodescribe,jdbcType=VARCHAR},
      </if>
      <if test="hosentiment != null">
        Hosentiment = #{hosentiment,jdbcType=INTEGER},
      </if>
      <if test="hoaddress != null">
        Hoaddress = #{hoaddress,jdbcType=VARCHAR},
      </if>
      <if test="hostate != null">
        Hostate = #{hostate,jdbcType=CHAR},
      </if>
      <if test="hostaydate != null">
        Hostaydate = #{hostaydate,jdbcType=TIMESTAMP},
      </if>
      <if test="hocheckdate != null">
        Hocheckdate = #{hocheckdate,jdbcType=TIMESTAMP},
      </if>
      <if test="reid != null">
        Reid = #{reid,jdbcType=INTEGER},
      </if>
      <if test="arid != null">
        Arid = #{arid,jdbcType=INTEGER},
      </if>
    </set>
    where Hoid = #{hoid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Bk_hotel">
    update bk_hotel
    set Hid = #{hid,jdbcType=INTEGER},
      Honame = #{honame,jdbcType=VARCHAR},
      Hodescribe = #{hodescribe,jdbcType=VARCHAR},
      Hosentiment = #{hosentiment,jdbcType=INTEGER},
      Hoaddress = #{hoaddress,jdbcType=VARCHAR},
      Hostate = #{hostate,jdbcType=CHAR},
      Hostaydate = #{hostaydate,jdbcType=TIMESTAMP},
      Hocheckdate = #{hocheckdate,jdbcType=TIMESTAMP},
      Reid = #{reid,jdbcType=INTEGER},
      Arid = #{arid,jdbcType=INTEGER}
    where Hoid = #{hoid,jdbcType=INTEGER}
  </update>
</mapper>